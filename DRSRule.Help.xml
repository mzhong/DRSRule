<?xml version="1.0" encoding="utf-8"?><helpItems schema="maml">
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Export-DrsRule</command:name>
		<maml:description>
			<maml:para>Export DRS rules and groups as JSON</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Export</command:verb>
		<command:noun>DrsRule</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet gets the specified DRS items for the given DRS Clusters, and exports their info as JSON to the given file.
These include DRS VM groups, DRS VMHost groups, DRS VM to VM rules, and DRS VM to VMHost rules.</maml:para>
		<maml:para>The exported JSON is suitable (targeted) for use in the Import-DrsRule cmdlet, for recreating exported rule/group objects.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Export-DrsRule</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of rule / DRS group info to get and export. If not specified, will return all rule/group info</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster for which to get DRS info</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path of output file in which to put DRS info in JSON format (relative or absolute). File will be created if non-existent, or overwritten if existent</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of rule / DRS group info to get and export. If not specified, will return all rule/group info</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster for which to get DRS info</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Path of output file in which to put DRS info in JSON format (relative or absolute). File will be created if non-existent, or overwritten if existent</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Export-DrsRule -Path C:\importantStuff\myDrsRuleInfo_$((Get-Date).ToString(&apos;ddMMMyyyy_HHmm&apos;)).json</dev:code>
			<dev:remarks>
				<maml:para>Exports the DRS group/rule information for all clusters in JSON format, stored in given file with the right-now date/time stamp in the filename.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>    Directory: C:\importantStuff


Mode                LastWriteTime     Length Name
----                -------------     ------ ----
-a---         1/16/2015  11:10 PM       5520 myDrsRuleInfo_16Jan2015_2310.json</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-Cluster NewCluster10 | Export-DrsRule -Name *grp0 -Path c:\temp\drsInfo_NewCluster10.json -Verbose</dev:code>
			<dev:remarks>
				<maml:para>For this cluster, export the DRS rules/groups whose names are like &quot;*grp0&quot;.  The -Verbose parameter causes the cmdlet to include a verbose message about the number of rules/groups exported, and the file name to which the information was written.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>VERBOSE: Exported and saved information for &apos;4&apos; DRS rules/groups to &apos;c:\temp\drsInfo_NewCluster10.json&apos;


    Directory: C:\temp


Mode                LastWriteTime     Length Name
----                -------------     ------ ----
-a---         1/17/2015  12:08 AM       1605 drsInfo_NewCluster10.json
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-Cluster NewCluster10 | Export-DrsRule -Name doesNotExist* -Path c:\temp\drsInfo_NewCluster10.json -Verbose</dev:code>
			<dev:remarks>
				<maml:para>Here, cluster NewCluster10 has no DRS groups or rules defined, yet.  So, Export-DrsRule (with the -Verbose parameter) returns a verbose message with information to that effect.  No .json file is created.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>VERBOSE: No DRS group/rule found for like name &apos;doesNotExist*&apos; in cluster with name like &apos;NewCluster10&apos;</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Import-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-DrsVMGroup</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the DRS VM groups.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>DrsVMGroup</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet retrieves the DRS VM groups.
It returns DRS VM groups that correspond to the filter criteria provided by the cmdlet parameters.</maml:para>
		<maml:para>The default return type holds more information than the &quot;raw&quot; DRS object that vSphere uses.  There is also a switch to allow for just returning said raw DRS object, quite useful for consumption by other cmdlets in this module.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-DrsVMGroup</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of DRS VM Group to get (or, all if no name specified)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster from which to get DRS VM group (or, all clusters if no name specified)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnRawGroup</maml:name>
				<maml:description>
					<maml:para>Switch:  return &quot;raw&quot; VMware.Vim.ClusterVmGroup object (contains less info, but useful to other functions that can consume this raw object)</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of DRS VM Group to get (or, all if no name specified)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster from which to get DRS VM group (or, all clusters if no name specified)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnRawGroup</maml:name>
			<maml:description>
				<maml:para>Switch:  return &quot;raw&quot; VMware.Vim.ClusterVmGroup object (contains less info, but useful to other functions that can consume this raw object)</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMGroup]</maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>Object with information about the given DRS VM group, or a raw vSphere object
</maml:para>
			</maml:description>
		</command:returnValue>
		<command:returnValue>
			<dev:type>
				<maml:name>[VMware.Vim.ClusterVmGroup]</maml:name>
				<maml:uri />
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-DRSVMGroup -Name &apos;*VM Group 1*&apos;</dev:code>
			<dev:remarks>
				<maml:para>Returns all DRS VM groups with name like &#39;*VM Group 1*&#39;</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name               Cluster         UserCreated        VM
----               -------         -----------        --
VM Group 1         Cluster1        True               {VM1,VM2}
VM Group 12        Cluster1        True               {VM3}
New VM Group 100   Cluster2        True               {VM4,VM5,VM6}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-DRSVMGroup -Cluster Cluster1 -Name &apos;VM Group 1&apos;</dev:code>
			<dev:remarks>
				<maml:para>The DRS VM group with the exact name &#39;VM Group 1&#39; from Cluster1 will be returned.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name               Cluster         UserCreated        VM
----               -------         -----------        --
VM Group 1         Cluster1        True               {VM1,VM2}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-Cluster Cluster2 | Get-DrsVmGroup</dev:code>
			<dev:remarks>
				<maml:para>Returns all DRS VM groups in cluster &quot;Cluster2&quot;</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name               Cluster         UserCreated        VM
----               -------         -----------        --
VM Group 5         Cluster2        True               {VM101,VM102}
testVMGroup        Cluster2        True               {VM0,VM1001,VM1002}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>New-DrsVMGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsVMGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsVMGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-DrsVMHostGroup</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the DRS VMHost groups.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>DrsVMHostGroup</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet retrieves the DRS VM groups.
It returns DRS VM groups that correspond to the filter criteria provided by the cmdlet parameters.</maml:para>
		<maml:para>The default return type holds more information than the &quot;raw&quot; DRS object that vSphere uses.  There is also a switch to allow for just returning said raw DRS object, quite useful for consumption by other cmdlets in this module.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-DrsVMHostGroup</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of DRS VM Group to get (or, all if no name specified)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster from which to get DRS VMHost group (or, all clusters if no name specified)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnRawGroup</maml:name>
				<maml:description>
					<maml:para>Switch:  return &quot;raw&quot; VMware.Vim.ClusterHostGroup object (contains less info, but useful to other functions that can consume this raw object)</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of DRS VM Group to get (or, all if no name specified)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster from which to get DRS VMHost group (or, all clusters if no name specified)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnRawGroup</maml:name>
			<maml:description>
				<maml:para>Switch:  return &quot;raw&quot; VMware.Vim.ClusterHostGroup object (contains less info, but useful to other functions that can consume this raw object)</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMHostGroup]</maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>Object with information about the given DRS VMHost group, or a raw vSphere object
</maml:para>
			</maml:description>
		</command:returnValue>
		<command:returnValue>
			<dev:type>
				<maml:name>[VMware.Vim.ClusterHostGroup]</maml:name>
				<maml:uri />
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-DRSVMHostGroup -Name &apos;*VMHost Group 1*&apos;</dev:code>
			<dev:remarks>
				<maml:para>Returns all DRS VMHost groups with name like &#39;*VMHost Group 1*&#39;</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name               Cluster         UserCreated        VMHost
----               -------         -----------        ------
VMHost Group 1     Cluster1        True               {esx1,esx2}
VMHost Group 12    Cluster1        True               {esx3}
New VMHost Group 1 Cluster2        True               {esx4,esx5,esx6}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-DRSVMHostGroup -Cluster Cluster1 -Name &apos;VMHost Group 1&apos;</dev:code>
			<dev:remarks>
				<maml:para>The DRS VMHost group with the exact name &#39;VMHost Group 1&#39; from Cluster1 will be returned.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name               Cluster         UserCreated        VMHost
----               -------         -----------        ------
VMHost Group 1     Cluster1        True               {esx1,esx2}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-Cluster Cluster2 | Get-DrsVMHostGroup</dev:code>
			<dev:remarks>
				<maml:para>Returns all DRS VMHost groups in cluster &quot;Cluster2&quot;</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name               Cluster         UserCreated        VMHost
----               -------         -----------        ------
oldVMHostGroup     Cluster2        True               {esx11,esx12}
VMHost Group DR    Cluster2        True               {esx13}
New VMHost Grp 3   Cluster2        True               {esx14,esx15,esx16}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>New-DrsVMHostGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsVMHostGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsVMHostGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-DrsVMToVMHostRule</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the DRS VM to VMHost rules.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>DrsVMToVMHostRule</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet retrieves the DRS VM to VMHost rules.
It returns a number of DRS VM to VMHost rules that correspond to the filter criteria provided by the cmdlet parameters.</maml:para>
		<maml:para>The default return type holds more information than the &quot;raw&quot; DRS object that vSphere uses.  There is also a switch to allow for just returning said raw DRS object, quite useful for consumption by other cmdlets in this module.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-DrsVMToVMHostRule</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of DRS VM affinity/antiaffinity rule to get (or, all if no name specified)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster from which to get DRS VM-to-VM rule (or, all clusters if no name specified)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnRawRule</maml:name>
				<maml:description>
					<maml:para>Switch:  return DRS VM to VM rule as &quot;raw&quot; VMware.Vim.ClusterHostGroup object (contains less info, but useful to other functions that can consume this raw object)</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of DRS VM affinity/antiaffinity rule to get (or, all if no name specified)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster from which to get DRS VM-to-VM rule (or, all clusters if no name specified)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnRawRule</maml:name>
			<maml:description>
				<maml:para>Switch:  return DRS VM to VM rule as &quot;raw&quot; VMware.Vim.ClusterHostGroup object (contains less info, but useful to other functions that can consume this raw object)</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMToVMHostRule]</maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>Object with information about the given DRS VM to VMHost rule, or a raw vSphere object
</maml:para>
			</maml:description>
		</command:returnValue>
		<command:returnValue>
			<dev:type>
				<maml:name>[VMware.Vim.ClusterVmHostRuleInfo]</maml:name>
				<maml:uri />
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-DrsVMToVMHostRule -Name &apos;Rule 1*&apos;</dev:code>
			<dev:remarks>
				<maml:para>Returns all DRS VM to VMHost rules with name like &#39;Rule 1*&#39;</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name         Cluster         Enabled     Mandatory   VMGroupName
----         -------         -------     ---------   -----------
Rule 1       Cluster1        False       False       VM Group 1
Rule 11      Cluster2        True        True        All VM</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-DrsVMtoVMHostRule -Cluster Cluster[12]</dev:code>
			<dev:remarks>
				<maml:para>Returns all DRS VM to VMHost rules in clusters named &quot;Cluster1&quot; and &quot;Cluster2&quot;</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name         Cluster         Enabled     Mandatory   VMGroupName
----         -------         -------     ---------   -----------
Rule 0       Cluster1        True        False       VM Group 1
Rule 1       Cluster1        False       False       VM Group 12
Rule 2       Cluster1        False       False       VM Group 31
Rule 11      Cluster2        True        True        All VM
Rule_bak     Cluster2        True        False       testVMGroup
Rule_toDel   Cluster2        False       True        VM Group 5</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>New-DrsVMToVMHostRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsVMToVMHostRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsVMToVMHostRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-DrsVMToVMRule</command:name>
		<maml:description>
			<maml:para>This cmdlet retrieves the DRS VM to VM rules.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>DrsVMToVMRule</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet retrieves the DRS VM to VM rules.
It returns DRS VM to VM rules that correspond to the filter criteria provided by the cmdlet parameters.
The VM to VM rules can be either affinity- or anti-affinity rules.</maml:para>
		<maml:para>The default return type holds more information than the &quot;raw&quot; DRS object that vSphere uses.  There is also a switch to allow for just returning said raw DRS object, quite useful for consumption by other cmdlets in this module.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-DrsVMToVMRule</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of DRS VM-to-VMHost rule to get (or, all if no name specified)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster from which to get DRS VM-to-VMHost rule (or, all clusters if no name specified)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnRawRule</maml:name>
				<maml:description>
					<maml:para>Switch:  return DRS VM to VM rule as &quot;raw&quot; VMware.Vim.ClusterVmHostRuleInfo object (contains less info, but useful to other functions that can consume this raw object)</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of DRS VM-to-VMHost rule to get (or, all if no name specified)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster from which to get DRS VM-to-VMHost rule (or, all clusters if no name specified)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnRawRule</maml:name>
			<maml:description>
				<maml:para>Switch:  return DRS VM to VM rule as &quot;raw&quot; VMware.Vim.ClusterVmHostRuleInfo object (contains less info, but useful to other functions that can consume this raw object)</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMToVMRule]</maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>Object with information about the given DRS VM to VM rule, or a raw vSphere object</maml:para>
			</maml:description>
		</command:returnValue>
		<command:returnValue>
			<dev:type>
				<maml:name>[VMware.Vim.ClusterAffinityRuleSpec]</maml:name>
				<maml:uri />
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
		</command:returnValue>
		<command:returnValue>
			<dev:type>
				<maml:name>[VMware.Vim.ClusterAntiAffinityRuleSpec]</maml:name>
				<maml:uri />
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-DrsVMToVMRule -Name &apos;Rule 1*&apos;</dev:code>
			<dev:remarks>
				<maml:para>Returns all DRS VM to VM rules with name like &#39;Rule 1*&#39;</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name         Cluster         Enabled     KeepTogether  Mandatory   VM
----         -------         -------     ------------  ---------   --
Rule 1       Cluster1        False       False         False       {VM1, VM2}
Rule 11      Cluster2        True        True          True        {VM3, VM4}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-Cluster Cluster2 | Get-DrsVMtoVMHostRule</dev:code>
			<dev:remarks>
				<maml:para>Returns all DRS VM to VM rules in Cluster2</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name         Cluster         Enabled     KeepTogether  Mandatory   VM
----         -------         -------     ------------  ---------   --
Rule 0       Cluster2        False       False         False       {VM101, VM102}
Rule 11      Cluster2        True        True          True        {VM103, VM014}
Rule_old     Cluster2        False       True          True        {VM110, VM111}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>New-DrsVMToVMRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsVMToVMRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsVMToVMRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Import-DrsRule</command:name>
		<maml:description>
			<maml:para>Import DRS rules and groups from exported info in JSON</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Import</command:verb>
		<command:noun>DrsRule</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet creates specified DRS items for the given DRS Clusters.  The cmdlet gets the information about the items to create from the exported DRS data generated by the Export-DrsRule cmdlet.  The Path parameter is to the JSON file that resutls from Export-DrsRule.
The items recreated include DRS VM groups, DRS VMHost groups, DRS VM to VM rules, and DRS VM to VMHost rules.  One can &quot;overwrite&quot; existing groups/rules with the provided -Force parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Import-DrsRule</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Filespec of JSON file with exported DRS rule info</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of rule/group to import, or all if no name specified</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster whose exported rules to import, and in which to recreate said rules. If not specified, will import rules from in the JSON file without filtering on cluster</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Switch to specify that the import &quot;overwrite&quot; existing groups/rules of same source name in target cluster ($true), or to not import groups/rules if conflict/already existing ($false or not specified).  If $false and conflict, error thrown for each conflicting group/rule.
&quot;Overwrite&quot; is accomplished by 0) removal of original group/rule, 1) creation of new group/rule with same name</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Filespec of JSON file with exported DRS rule info</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of rule/group to import, or all if no name specified</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster whose exported rules to import, and in which to recreate said rules. If not specified, will import rules from in the JSON file without filtering on cluster</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Switch to specify that the import &quot;overwrite&quot; existing groups/rules of same source name in target cluster ($true), or to not import groups/rules if conflict/already existing ($false or not specified).  If $false and conflict, error thrown for each conflicting group/rule.
&quot;Overwrite&quot; is accomplished by 0) removal of original group/rule, 1) creation of new group/rule with same name</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowOnly</maml:name>
			<maml:description>
				<maml:para>Switch to have cmdlet report-only.  This is so as to just get the informational objects from the JSON file, with no further action.  The filtering of the rules/groups by the specified Name and Cluster still takes place, but then the cmdlet returns the informational objects whose details were retrieved from the given JSON file; no rule/group creation is attempted.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMGroup]</maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>Object with information about the new DRS VM group</maml:para>
			</maml:description>
		</command:returnValue>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMHostGroup]</maml:name>
				<maml:uri />
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
Object with information about the new DRS VMHost group</maml:para>
			</maml:description>
		</command:returnValue>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMToVMHostRule]</maml:name>
				<maml:uri />
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
Object with information about the new DRS VM to VMHost rule</maml:para>
			</maml:description>
		</command:returnValue>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMToVMRule]</maml:name>
				<maml:uri />
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
Object with information about the new DRS VM to VM rule</maml:para>
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Import-DrsRule -Path c:\temp\myDrsRuleInfo_backup.json</dev:code>
			<dev:remarks>
				<maml:para>Imports all of the DRS rules/groups whose info is in the given JSON file.  The JSON file is of objects exported from the environment via the Export-DrsRule cmdlet.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name               Cluster         UserCreated        VM
----               -------         -----------        --
VM Group 1         Cluster1        True               {VM1,VM2}
VM Group 12        Cluster1        True               {VM3}
New VM Group 100   Cluster2        True               {VM4,VM5,VM6}
...</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Import-DrsRule -Path \\fileserver.dom.com\share\myDrsRuleInfo.json -Cluster Cluster0 -Name *hostgr*</dev:code>
			<dev:remarks>
				<maml:para>Imports the rules/groups whose name is like &quot;*hostgr*&quot; and whose cluster property is Cluster0.  The -Cluster and -Name parameters are used here to narrow the scope of the DRS items that are imported.  In this example, that was only one (1) item:  a DRS VMHost group.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name               Cluster         UserCreated        VMHost
----               -------         -----------        ------
faveVMHostGroup    Cluster0        True               {megahost0,megahost1}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Import-DrsRule -Path \\fileserver.dom.com\share\myDrsRuleInfo.json -Cluster Cluster0 -Name *hostgrp0*</dev:code>
			<dev:remarks>
				<maml:para>Just get the informational objects with name like &quot;*hostgrp0*&quot; from the JSON file, with no further action.  The cmdlet returns the informational objects whose details were retrieved from the given JSON file; no rule/group creation is attempted.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name        : hostGrp0
Cluster     : Cluster0
VMHost      : esxi02,esxi03
VMHostId    : {HostSystem-host-621,HostSystem-host-693}
UserCreated : False
Type        : ClusterHostGroup

Name        : TestVMHostGrp0
Cluster     : Cluster0
VMHost      : esxi14,esxi15,esxi16
VMHostId    : {HostSystem-host-721,HostSystem-host-725,HostSystem-host-729}
UserCreated : True
Type        : ClusterHostGroup</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Export-DrsRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>New-DrsVMGroup</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new DRS VM group.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>DrsVMGroup</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet creates a new DRS VM group with the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-DrsVMGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of DRS VM Group to create</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster in which to create new group</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>VMs to place in new group.
The VMs can be specified as strings (their names) or as VirtualMachine objects</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Switch to specify to &quot;overwrite&quot; existing group of said name in target cluster ($true), or to not create group if conflict/already existing ($false or not specified).  If $false and conflict, error thrown for each conflicting group.
&quot;Overwrite&quot; is accomplished by 0) removal of original group, 1) creation of new group with same name</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of DRS VM Group to create</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster in which to create new group</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>VMs to place in new group.
The VMs can be specified as strings (their names) or as VirtualMachine objects</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Switch to specify to &quot;overwrite&quot; existing group of said name in target cluster ($true), or to not create group if conflict/already existing ($false or not specified).  If $false and conflict, error thrown for each conflicting group.
&quot;Overwrite&quot; is accomplished by 0) removal of original group, 1) creation of new group with same name</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMGroup]</maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>Object with information about the new DRS VM group</maml:para>
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>New-DrsVMGroup -Name &apos;My VM Group&apos; -Cluster Cluster1 -VM VM1,VM2</dev:code>
			<dev:remarks>
				<maml:para>This will create a new DRS VM group with the name &#39;My VM Group&#39; on Cluster1.
The DRS VM group will contain the VMs VM1 and VM2.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name               Cluster         UserCreated        VM
----               -------         -----------        --
My VM Group        Cluster1        False              {VM1,VM2}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-DrsVMGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsVMGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsVMGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>New-DrsVMHostGroup</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new DRS VMHost group.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>DrsVMHostGroup</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet creates a new DRS VMHost group with the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-DrsVMHostGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of DRS VMHost Group to create</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster in which to create new group</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>The VMHosts that shall be in the new DRS VMHostgroup.
The VMHosts can be given as strings (their names) or as VMHost objects</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Switch to specify to &quot;overwrite&quot; existing group of said name in target cluster ($true), or to not create group if conflict/already existing ($false or not specified).  If $false and conflict, error thrown for each conflicting group.
&quot;Overwrite&quot; is accomplished by 0) removal of original group, 1) creation of new group with same name</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of DRS VMHost Group to create</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster in which to create new group</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>The VMHosts that shall be in the new DRS VMHostgroup.
The VMHosts can be given as strings (their names) or as VMHost objects</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Switch to specify to &quot;overwrite&quot; existing group of said name in target cluster ($true), or to not create group if conflict/already existing ($false or not specified).  If $false and conflict, error thrown for each conflicting group.
&quot;Overwrite&quot; is accomplished by 0) removal of original group, 1) creation of new group with same name</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMHostGroup]</maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>Object with information about the new DRS VMHost group</maml:para>
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>New-DrsVMHostGroup -Name &apos;My ESX&apos; -Cluster Cluster1 -VMHost esx1,esx2</dev:code>
			<dev:remarks>
				<maml:para>This will create a new DRS VMHost group with the name &#39;My ESX&#39; on Cluster1.
The DRS VMHost group will contain the VMHosts esx1 and esx2.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name               Cluster         UserCreated        VM
----               -------         -----------        --
My ESX             Cluster1        True               {esx1,esx2}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-DrsVMHostGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsVMHostGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsVMHostGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>New-DrsVMToVMHostRule</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new DRS VM to VMHost rule.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>DrsVMToVMHostRule</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet creates a new DRS VM to VMHost rule with the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-DrsVMToVMHostRule</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of the new DRS VM to VMHost rule to create</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster in which to create the new DRS VM to VMHost rule</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>A switch indicating if the new DRS VM to VMHost rule shall be enabled</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Mandatory</maml:name>
				<maml:description>
					<maml:para>Switch to specify if the new DRS VM to VMHost rule is a &quot;should&quot; ($false or not specified) or a &quot;must&quot; ($true) rule</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>VMGroupName</maml:name>
				<maml:description>
					<maml:para>DRS VM Group to use for new VM-to-VMHost rule</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AffineHostGroupName</maml:name>
				<maml:description>
					<maml:para>DRS VMHost Group to use for VM Group to VMHost Group affinity (&quot;run on&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AntiAffineHostGroupName</maml:name>
				<maml:description>
					<maml:para>DRS VMHost Group to use for VM Group to VMHost Group antiaffinity (&quot;not run on&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Switch to specify to &quot;overwrite&quot; existing rule of said name in target cluster ($true) if it exists, or to not create rule if conflict/already existing in cluster ($false or not specified).  If $false and conflict, error thrown for each conflicting rule.
&quot;Overwrite&quot; is accomplished by 0) removal of original rule, 1) creation of new rule with same name</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of the new DRS VM to VMHost rule to create</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster in which to create the new DRS VM to VMHost rule</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>A switch indicating if the new DRS VM to VMHost rule shall be enabled</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Mandatory</maml:name>
			<maml:description>
				<maml:para>Switch to specify if the new DRS VM to VMHost rule is a &quot;should&quot; ($false or not specified) or a &quot;must&quot; ($true) rule</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>VMGroupName</maml:name>
			<maml:description>
				<maml:para>DRS VM Group to use for new VM-to-VMHost rule</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AffineHostGroupName</maml:name>
			<maml:description>
				<maml:para>DRS VMHost Group to use for VM Group to VMHost Group affinity (&quot;run on&quot;)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AntiAffineHostGroupName</maml:name>
			<maml:description>
				<maml:para>DRS VMHost Group to use for VM Group to VMHost Group antiaffinity (&quot;not run on&quot;)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Switch to specify to &quot;overwrite&quot; existing rule of said name in target cluster ($true) if it exists, or to not create rule if conflict/already existing in cluster ($false or not specified).  If $false and conflict, error thrown for each conflicting rule.
&quot;Overwrite&quot; is accomplished by 0) removal of original rule, 1) creation of new rule with same name</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMToVMHostRule]</maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>Object with information about the new DRS VM to VMHost rule</maml:para>
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>New-DrsVMtoVMHostRule -Name testVmToVMHostRule0 -Cluster Cluster0 -Enabled -Mandatory -VMGroupName testVmGrp0 -AffineHostGroupName VMHostGrp0</dev:code>
			<dev:remarks>
				<maml:para>Creates a new DRS VM to VMHost rule in Cluster0. The new rule is enabled, and is a &quot;must run on&quot; rule.  It involves the VMs in DRS VM group testVmGrp0 and the VMHosts in DRS VMHost group VMHostGrp0.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name                     Cluster          Enabled    Mandatory    VMGroupName
----                     -------          -------    ---------    -----------
testVmToVMHostRule0      Cluster0         True       True         testVmGrp0</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>New-DrsVMtoVMHostRule -Name testVmToHostRule1 -Cluster Cluster0 -VMGroupName vmGrp1 -AntiAffineHostGroupName VMHostGrp1</dev:code>
			<dev:remarks>
				<maml:para>Creates a new DRS VM to VMHost rule in Cluster0. The new rule is disabled, and is a &quot;should not run on&quot; rule.  It involves the VMs in DRS VM group vmGrp1 and the VMHosts in DRS VMHost group VMHostGrp1.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name                     Cluster          Enabled    Mandatory    VMGroupName
----                     -------          -------    ---------    -----------
testVmToHostRule1        Cluster0         False      False        vmGrp1</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-DrsVMToVMHostRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsVMToVMHostRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsVMToVMHostRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>New-DrsVMToVMRule</command:name>
		<maml:description>
			<maml:para>This cmdlet creates a new DRS VM to VM rule.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>DrsVMToVMRule</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet creates a new DRS VM to VM rule with the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-DrsVMToVMRule</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of new DRS VM to VM rule to create</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster in which to create the new DRS VM to VM rule</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>A switch indicating if the new DRS VM to VM rule shall be enabled</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Mandatory</maml:name>
				<maml:description>
					<maml:para>Switch to specify if the new DRS VM to VM rule is a &quot;should&quot; ($false or not specified) or a &quot;must&quot; ($true) rule</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>KeepTogether</maml:name>
				<maml:description>
					<maml:para>Switch that indicates if the new DRS VM to VM rule is an &quot;affinity&quot; ($true) or &quot;anti-affinity&quot; ($false or not specified) VM to VM rule</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>The VMs that shall be in the new DRS VM to VM rule.
The VMs can be specified as strings (their names) or as VirtualMachine objects</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Switch to specify to &quot;overwrite&quot; existing rule of said name in target cluster ($true) if it exists, or to not create rule if conflict/already existing in cluster ($false or not specified).  If $false and conflict, error thrown for each conflicting rule.
&quot;Overwrite&quot; is accomplished by 0) removal of original rule, 1) creation of new rule with same name</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of new DRS VM to VM rule to create</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster in which to create the new DRS VM to VM rule</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>A switch indicating if the new DRS VM to VM rule shall be enabled</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Mandatory</maml:name>
			<maml:description>
				<maml:para>Switch to specify if the new DRS VM to VM rule is a &quot;should&quot; ($false or not specified) or a &quot;must&quot; ($true) rule</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>KeepTogether</maml:name>
			<maml:description>
				<maml:para>Switch that indicates if the new DRS VM to VM rule is an &quot;affinity&quot; ($true) or &quot;anti-affinity&quot; ($false or not specified) VM to VM rule</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>The VMs that shall be in the new DRS VM to VM rule.
The VMs can be specified as strings (their names) or as VirtualMachine objects</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Switch to specify to &quot;overwrite&quot; existing rule of said name in target cluster ($true) if it exists, or to not create rule if conflict/already existing in cluster ($false or not specified).  If $false and conflict, error thrown for each conflicting rule.
&quot;Overwrite&quot; is accomplished by 0) removal of original rule, 1) creation of new rule with same name</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMToVMRule]</maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>Object with information about the new DRS VM to VM rule</maml:para>
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>New-DrsVMToVMRule -Name MyRule -Cluster Cluster1 -Enabled -Mandatory -KeepTogether:$false -VM VM1,VM2</dev:code>
			<dev:remarks>
				<maml:para>This will create a new DRS VM to VM rule for the VM1 and VM2.
The rule will be enabled.
The rule expresses an obligation (&quot;shall&quot; or &quot;must&quot;).
The rule will be an anti-affinity rule.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name         Cluster         Enabled     KeepTogether  Mandatory   VM
----         -------         -------     ------------  ---------   --
MyRule       Cluster1        True        False         True        {VM1,VM2}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-DrsVMToVMRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsVMToVMRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsVMToVMRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Remove-DrsVMGroup</command:name>
		<maml:description>
			<maml:para>This cmdlet removes a DRS VM group.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>DrsVMGroup</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet removes a DRS VM group that fits the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-DrsVMGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of DRS VM Group to remove</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster from which to remove the DRS VM group</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of DRS VM Group to remove</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster from which to remove the DRS VM group</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Remove-DrsVMGroup -Name My* -Cluster Cluster1</dev:code>
			<dev:remarks>
				<maml:para>This example will remove all DRS VM groups on Cluster1, whose name starts with &#39;My&#39;</maml:para>
				<maml:para>To suppress confirmation, pass &quot;-Confirm:$false&quot; to the Remove-DrsVMGroup cmdlet.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-DrsVMGroup testGrpToKill | Remove-DrsVMGroup</dev:code>
			<dev:remarks>
				<maml:para>Gets DRS VM group &quot;testGrpToKill&quot; from all clusters, and removes said groups. Prompts for confirmation due to the impact level.  Upon answering &quot;Y&quot;, the groups are removed.</maml:para>
				<maml:para>To suppress confirmation, pass &quot;-Confirm:$false&quot; to the Remove-DrsVMGroup cmdlet.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>
Confirm
Are you sure you want to perform this action?
Performing the operation &quot;Remove DRS VM group &apos;testGrpToKill&apos;&quot; on target &quot;Cluster0&quot;.
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): Y</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-DrsVMGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DrsVMGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsVMGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Remove-DrsVMHostGroup</command:name>
		<maml:description>
			<maml:para>This cmdlet removes a DRS VMHost group.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>DrsVMHostGroup</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet removes a DRS VMHost group that fits the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-DrsVMHostGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of DRS VMHost group to remove</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster from which to remove the DRS VMHost group</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of DRS VMHost group to remove</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster from which to remove the DRS VMHost group</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Remove-DrsVMHostGroup -Name &apos;All ESXi&apos; -Cluster Cluster1</dev:code>
			<dev:remarks>
				<maml:para>This example will remove the DRS VMHost groups on Cluster1, whose name is exactly &#39;All ESXi&#39;</maml:para>
				<maml:para />
				<maml:para />
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-DrsVMHostGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DrsVMHostGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsVMHostGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Remove-DrsVMToVMHostRule</command:name>
		<maml:description>
			<maml:para>This cmdlet removes a DRS VM to VMHost rule.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>DrsVMToVMHostRule</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet removes DRS VM to VMHost rules that fit the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-DrsVMToVMHostRule</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of the DRS VM to VMHost rule to remove</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster from which to remove the DRS VM to VMHost rule</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of the DRS VM to VMHost rule to remove</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster from which to remove the DRS VM to VMHost rule</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Remove-DrsVMToVMHostRule -Name Rule1 -Cluster Cluster1</dev:code>
			<dev:remarks>
				<maml:para>This example will remove the DRS VM to VMHost rule, on cluster Cluster1, whose name is exactly &#39;Rule1&#39;</maml:para>
				<maml:para />
				<maml:para />
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-DrsVMToVMHostRule testVmToHostRule1 | Remove-DrsVMToVMHostRule</dev:code>
			<dev:remarks>
				<maml:para>Gets DRS VM to Host rules &quot;testVmToHostRule1&quot; from all clusters, and removes said rules. Prompts for confirmation due to the impact level.  Upon answering &quot;Y&quot;, the rules are removed.</maml:para>
				<maml:para>To suppress confirmation, pass &quot;-Confirm:$false&quot; to the Remove-DrsVMToVMHostRule cmdlet.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>
Confirm
Are you sure you want to perform this action?
Performing the operation &quot;Remove DRS rule &apos;testVmToHostRule1&apos;&quot; on target &quot;Cluster0&quot;.
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): Y</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-DrsVMToVMHostRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DrsVMToVMHostRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsVMToVMHostRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Remove-DrsVMToVMRule</command:name>
		<maml:description>
			<maml:para>This cmdlet removes a DRS VM to VM rule.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>DrsVMToVMRule</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet removes DRS VM to VM rules that fit the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-DrsVMToVMRule</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of the DRS VM to VM rule to remove</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster from which to remove the DRS VM to VM rule</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name of the DRS VM to VM rule to remove</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster from which to remove the DRS VM to VM rule</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Remove-DrsVMToVMRule -Name MyRule</dev:code>
			<dev:remarks>
				<maml:para>This example will remove the DRS VM to VM rules, whose name is &#39;MyRule&#39;, and this on all clusters</maml:para>
				<maml:para />
				<maml:para />
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-DrsVMToVMRule testVmToVmRule1 | Remove-DrsVMToVMRule</dev:code>
			<dev:remarks>
				<maml:para>Gets DRS VM to VM rules &quot;testVmToVmRule1&quot; from all clusters, and removes said rules. Prompts for confirmation due to the impact level.  Upon answering &quot;Y&quot;, the rules are removed.</maml:para>
				<maml:para>To suppress confirmation, pass &quot;-Confirm:$false&quot; to the Remove-DrsVMToVMRule cmdlet.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>
Confirm
Are you sure you want to perform this action?
Performing the operation &quot;Remove DRS rule &apos;testVmToVmRule1&apos;&quot; on target &quot;Cluster0&quot;.
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): Y</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-DrsVMToVMRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DrsVMToVMRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-DrsVMToVMRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Set-DrsVMGroup</command:name>
		<maml:description>
			<maml:para>This cmdlet changes a DRS VM group.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>DrsVMGroup</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet changes settings of the DRS VM group with the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-DrsVMGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>The name of the DRS VM group to modify</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster in which the DRS VM group resides</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>The VMs that shall be in the DRS VM group.
The VMs can be specified as strings (their names) or as VirtualMachine objects</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Append</maml:name>
				<maml:description>
					<maml:para>Switch: append the given VM(s) as members of the DRS VM group ($true), or set them as the only members of the group ($false or not specified)? Can not be used together with the Remove switch</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>Switch: remove the given VM(s) as members of the DRS VM group ($true), or set them as the only members of the group ($false or not specified)? Can not be used together with the Append switch</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>The name of the DRS VM group to modify</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster in which the DRS VM group resides</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>The VM that shall be in the DRS VM group.
The VMs can be specified as strings (their names) or as VirtualMachine objects</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Append</maml:name>
			<maml:description>
				<maml:para>Switch: append the given VM(s) as members of the DRS VM group ($true), or set them as the only members of the group ($false or not specified)?</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMGroup]</maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>Object with information about the updated DRS VM group</maml:para>
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Set-DrsVMGroup -Name &apos;VM Group 1&apos; -Append -VM vm3 -Cluster Cluster1</dev:code>
			<dev:remarks>
				<maml:para>The example will add Virtual Machine VM3 to DRS VM group, whose name is &#39;VM Group 1&#39;, on Cluster1</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name               Cluster         UserCreated        VM
----               -------         -----------        --
VM Group 1         Cluster1        False              {VM1,VM2,VM3}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-DrsVMGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DrsVMGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsVMGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Set-DrsVMHostGroup</command:name>
		<maml:description>
			<maml:para>This cmdlet changes a DRS VMHost group.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>DrsVMHostGroup</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet changes settings of the DRS VMHost group with the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-DrsVMHostGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>The name of the DRS VMHost group to modify</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster in which the DRS VMHost group resides</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>VMHost</maml:name>
				<maml:description>
					<maml:para>The VMHost that shall be in the DRS VMHost group.
The names of the VMHost can be given as strings or as VMHost objects.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Append</maml:name>
				<maml:description>
					<maml:para>Switch: append the given VMHosts(s) as members of the DRS VM group ($true), or set them as the only members of the group ($false or not specified)? Cannot be used together with Remove switch</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>Switch: remove the given VMHosts(s) as members of the DRS VM group ($true), or set them as the only members of the group ($false or not specified)? Cannot be used together with Append switch<</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>The name of the DRS VMHost group to modify</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster in which the DRS VMHost group resides</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMHost</maml:name>
			<maml:description>
				<maml:para>The VMHost that shall be in the DRS VMHost group.
The names of the VMHost can be given as strings or as VMHost objects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Append</maml:name>
			<maml:description>
				<maml:para>Switch: append the given VMHosts(s) as members of the DRS VM group ($true), or set them as the only members of the group ($false or not specified)?</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMHostGroup]</maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>Object with information about the updated DRS VMHost group</maml:para>
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Set-DrsVMHostGroup -Name &apos;My ESX&apos; -Append -VMHost esx3 -Cluster Cluster1</dev:code>
			<dev:remarks>
				<maml:para>The example will add VMHost esx3 to DRS VMHost group, whose name is &#39;My ESX&#39;, on Cluster1</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name               Cluster         UserCreated        VM
----               -------         -----------        --
My ESX             Cluster1        True               {esx1,esx2,esx3}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-DrsVMHostGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DrsVMHostGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsVMHostGroup</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Set-DrsVMToVMHostRule</command:name>
		<maml:description>
			<maml:para>This cmdlet changes a DRS VM to VMHost rule.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>DrsVMToVMHostRule</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet changes a DRS VM to VMHost rule with the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-DrsVMToVMHostRule</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>The name of the DRS VM to VMHost rule to modify</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>Cluster in which DRS VM to VMHost rule resides</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>A switch indicating if the DRS VM to VMHost rule shall be enabled</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>VMGroup</maml:name>
				<maml:description>
					<maml:para>The name of the new DRS VM group to use for this rule. This will replace the current DRS VM group in the rule</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>VMHostGroup</maml:name>
				<maml:description>
					<maml:para>The name of the new DRS VMHost group to use for this rule.  This will replace the current DRS VMHost group in the rule</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Mandatory</maml:name>
				<maml:description>
					<maml:para>A switch the allows to specify if the DRS VM to VMHost rule is to be changed to a &quot;should&quot; ($false or not specified) or a &quot;must&quot; ($true) rule.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeepTogether</maml:name>
				<maml:description>
					<maml:para>Switch: Make this a &quot;run on&quot; rule. If $false (or not specified), this will be a &quot;not run on&quot; rule</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>The name of the DRS VM to VMHost rule to modify</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>Cluster in which DRS VM to VMHost rule resides</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>A switch indicating if the DRS VM to VMHost rule shall be enabled</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMGroup</maml:name>
			<maml:description>
				<maml:para>The name of the new DRS VM group to use for this rule. This will replace the current DRS VM group in the rule</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>VMHostGroup</maml:name>
			<maml:description>
				<maml:para>The name of the new DRS VMHost group to use for this rule.  This will replace the current DRS VMHost group in the rule</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Mandatory</maml:name>
			<maml:description>
				<maml:para>A switch the allows to specify if the DRS VM to VMHost rule is to be changed to a &quot;should&quot; ($false or not specified) or a &quot;must&quot; ($true) rule.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>KeepTogether</maml:name>
			<maml:description>
				<maml:para>Switch: Make this a &quot;run on&quot; rule. If $false (or not specified), this will be a &quot;not run on&quot; rule</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMToVMHostRule]</maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>Object with information about the updated DRS VM to VMHost rule</maml:para>
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Set-DrsVMToVMHostRule -Name Rule1 -VMGroup &apos;My VM&apos; -Cluster Cluster1</dev:code>
			<dev:remarks>
				<maml:para>This example changes the DRS VM to VMHost rules, whose name is &#39;Rule1&#39;, on Cluster1. The DRS VM group used in the rule will now be the DRS VM group named &#39;My VM&#39;</maml:para>
				<maml:para />
				<maml:para />
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-Cluster Cluster0 | Get-DrsVMToVMHostRule testVmToHostRule0 | Set-DrsVMToVMHostRule -Enabled -KeepTogether:$false | Format-List *</dev:code>
			<dev:remarks>
				<maml:para>Gets the given cluster and then the DRS VM to VMHost rule &quot;testVmToHostRule0&quot; therein, and then:
    enables the rule
    sets it as an anti-affinity rule, keeping the VMs in the DRS VM group off of the VMHosts in the DRS VMHost group</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name                    : testVmToHostRule0
Cluster                 : Cluster0
ClusterId               : ClusterComputeResource-domain-c266
Enabled                 : True
Mandatory               : True
VMGroupName             : VmGrp0
AffineHostGroupName     :
AntiAffineHostGroupName : VMHostGrp0
UserCreated             : True
Type                    : ClusterVmHostRuleInfo</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-DrsVMToVMHostRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DrsVMToVMHostRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsVMToVMHostRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Set-DrsVMToVMRule</command:name>
		<maml:description>
			<maml:para>This cmdlet changes a DRS VM to VM rule.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>DrsVMToVMRule</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>This cmdlet changes a DRS VM to VM rule with the provided parameters.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-DrsVMToVMRule</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>The name of the DRS VM to VM rule to modify</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Cluster</maml:name>
				<maml:description>
					<maml:para>The cluster in which the DRS VM to VM rule resides</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>A switch indicating if the DRS VM to VM rule shall be enabled</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Mandatory</maml:name>
				<maml:description>
					<maml:para>A switch the allows to specify if the DRS VM to VM is to be changed to a &quot;should&quot; ($false or not specified) or a &quot;must&quot; ($true) rule</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeepTogether</maml:name>
				<maml:description>
					<maml:para>Switch that indicates if the new DRS VM to VM rule is an &quot;affinity&quot; ($true) or &quot;anti-affinity&quot; ($false or not specified) VM to VM rule</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>VM</maml:name>
				<maml:description>
					<maml:para>The VM that shall be in the DRS VM to VM rule.
The VMs can be specified as strings (their names) or as VirtualMachine objects</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Append</maml:name>
				<maml:description>
					<maml:para>A switch indicating if the Virtual Machines specified on the VM parameter shall replace the current VM in the DRS VM to VM rule ($false or not specified), or if they shall be appended to the current VM in the DRS VM to VM rule ($true)</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>The name of the DRS VM to VM rule to modify</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Cluster</maml:name>
			<maml:description>
				<maml:para>The cluster in which the DRS VM to VM rule resides</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>A switch indicating if the DRS VM to VM rule shall be enabled</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Mandatory</maml:name>
			<maml:description>
				<maml:para>A switch the allows to specify if the DRS VM to VM is to be changed to a &quot;should&quot; ($false or not specified) or a &quot;must&quot; ($true) rule</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>KeepTogether</maml:name>
			<maml:description>
				<maml:para>Switch that indicates if the new DRS VM to VM rule is an &quot;affinity&quot; ($true) or &quot;anti-affinity&quot; ($false or not specified) VM to VM rule</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>VM</maml:name>
			<maml:description>
				<maml:para>The VM that shall be in the DRS VM to VM rule.
The VMs can be specified as strings (their names) or as VirtualMachine objects</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PSObject[]</command:parameterValue>
			<dev:type>
				<maml:name>PSObject[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Append</maml:name>
			<maml:description>
				<maml:para>A switch indicating if the Virtual Machines specified on the VM parameter shall replace the current VM in the DRS VM to VM rule ($false or not specified), or if they shall be appended to the current VM in the DRS VM to VM rule ($true)</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Indicates that the cmdlet is run only to display the changes that would be made, and no objects are actually modified</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>If the value is $true, indicates that the cmdlet asks for confirmation before running.
If the value is $false, the cmdlet runs without asking for user confirmation.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>[DRSRule.VMToVMRule]</maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>Object with information about the updated DRS VM to VM rule</maml:para>
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Set-DrsVMToVMRule -Name &apos;My Rule&apos; -Enabled:$false -Cluster Cluster1</dev:code>
			<dev:remarks>
				<maml:para>This example disabled the VM to VM rule, whose name is &#39;My Rule&#39;, on Cluster1</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name         Cluster         Enabled     KeepTogether  Mandatory   VM
----         -------         -------     ------------  ---------   --
MyRule       Cluster1        False       False         True        {VM1,VM2}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-Cluster Cluster0 | Get-DrsVMToVMRule testVmToVmRule0 | Set-DrsVMtoVMRule -Mandatory:$false -KeepTogether -VM VM2 -Append</dev:code>
			<dev:remarks>
				<maml:para>Gets the given cluster and then the DRS VM to VM rule &quot;testVmToVmRule0 &quot; therein, and then:
    makes the rule a &quot;should&quot; instead of a &quot;must&quot; rule
    sets it as an affinity rule, keeping the VMs in the DRS VM group together as feasible
    appends VM &quot;VM2&quot; to the list of VMs to which the rule pertains</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name                     Cluster          Enabled    KeepTogether    Mandatory    VM
----                     -------          -------    ------------    ---------    --
testVmToVmRule0          Cluster0         True       True            False        {VM0, VM1, VM2}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-DrsVMToVMRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-DrsVMToVMRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-DrsVMToVMRule</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
</helpItems>